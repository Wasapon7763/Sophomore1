n (n > 1) 個の節点と，それらの節点を結ぶ枝とからなる連結したグラフが与えられる。節点は，それぞれ番号 0, 1, ..., n-1 が振られている。それぞれの枝には長さが指定されている。節点0 から節点1 へ至る最短の経路の長さ（経路となった枝の長さの和）を計算するプログラムを作れ。


入力は，つぎの形で与えられる。

n
b1  e1　l1
b2  e2　l2
      ...
bk  ek　lk
最初の行に節点の個数 n が与えられる。続く行には，それぞれの枝がその始点・終点の節点番号 bk, ek とその枝の長さ  lk がこの順に空白１文字で区切って与えられる。

入力をキーボードから与えるときは，入力の終わりに C-d を入力する。

出力は，節点0 から節点1 へ至る最短の経路の長さだけを１行として書き出し、末尾には改行を書き出せ。


入力例１
2
0 1 10
10
出力例１
10
入力例２
6
0 3 5
0 4 3
0 5 2
1 2 1
1 5 6
2 3 2
2 4 3
出力例２
7
ヒント
枝に長さが伴っているから，幅優先探索そのものにしたのではうまく行かない。

開始点から直接の枝でつながっている節点についてみると，開始点 0 から出ている最も短い枝でつながっている節点(仮に n1 としよう。）だけは，開始点 0 からの最短路がその直接の枝をたどるものであることがわかる。途中，別の節点を経由する経路は（枝の長さは必ず正であるから）この直接の枝をたどるものよりも経路の長さは必ずそれよりも長くなるからである。

これで，開始点 0 （への最短経路の長さは，もちろん0である）と， n1 の２点が最短経路の長さが確定したことになる。

   
節点 n1 から枝で直接につながっている節点については，確定した n1 への最短経路長にその枝の長さを足した経路長で達することができることがわかる。もし，その節点について，すでにそれまでにこうした経路長が計算されていれば，それと比較してより短い経路長を記録しておくことにすると，最短経路長の未確定な節点すべてについて，まだ経路長が出ていないか，節点  { 0, n1 } を経てその節点に至る最短経路長がわかっていることになる。

   
それらの中で，最も小さい最短経路長を持つ節点を n2 とすると，節点 n2 への  0 からの最短経路長がその値であることが確定する。

   
続いて，節点 n2　から直接の枝でつながっている節点について，節点  { 0, n1,  n2 } を経ての最短経路長を算出する。そして，それらの中で最も小さい値をもつ節点 n3 は，その値が節点 0 からの最短経路長であることが確定する。

　
・・・・・



この作業を，目的の節点について最短経路長が確定するまで続ければよい。この方法をその考案者の名前を使って Dijkstra法（ダイクストラ法）という。
